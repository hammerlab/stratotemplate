
## Template for Configuring Stratocumulus' scripts



## You need to choose a prefix for all the names generated by the scripts and
## Google tools:
## - This name will show up in the WebUIs of Google-cloud
## - Don't use more than 15 characters because GCE has some limitations on
##   names' lengths

# export PREFIX=improbability-drive

## Set the gcloud zone
# export GCLOUD_ZONE="us-east1-c"
# gcloud config set compute/zone $GCLOUD_ZONE


## Choose an authentication token for the Ketrew server:

# echo export TOKEN=some-big-string-12387387438


## The `gcpketrew.sh` script will output the server's SSH configuration and Key
## pairs there:
## You don't have to change this if you follow the tutorial.

export SSH_CONFIG_DIR=$PWD/_sshconfig/


## The `gcloud`-enabled host, from the Ketrew server's perspective.
## On a google-cloud VM used as `gclouder` (like in the Instructions),
## Look at the result of the commands `whoami` and `hostname` to fill the gaps:

# export GCLOUD_HOST="ssh://<googleusername>@<gclouder-vm-name>/tmp/KT-dir"

## Number of compute nodes in the deployed cluster:

# export CLUSTER_NODES=12

## The size (in GB) of the newly created NFS deployments (storage + server)

# export SIZE_GB=1000

## Description of the NFS services that we want the Cluster to mount
##
## A `:`-separated list of `,`-separated 4-tuples
##
## Each tuple is:  <nfs-server-vm>,<nfs-remote-path>,<witnessfile>,<mount-point>
##
## - <nfs-server-vm> is the instance name
## - <n-remote-path> is the path on the server that we want to mount
## - <witness-file> is a relative path to a file that should exist on the mount (used for verification)
## - <mount-point> is the path where we mount the NFS service (on all cluster nodes)

# export CLUSTER_NFS_MOUNTS=datasets-nfs-vm,/datasets-nfs-storage/,.strato-witness.txt,/nfsdatasets:test-nfs-server-vm,/test-storage,Hello.md,/nfswork

## `$KETREW_URL` tells `gcpketrew.sh` to output the URL of the server to that
## file
## If you use
##      ketrew init --conf ./ketrewdocker/ --just-client $(cat $KETREW_URL)
## then `$KETREW_CONFIGURATION` will be already set correctly:

export KETREW_URL=$PWD/ketrew-url
export KETREW_CONFIGURATION=$PWD//ketrewdocker/configuration.ml

## Variables used in the `biokepi_machine.ml` script:
##
##  Biokepi configuration requires a few directories shared accross the cluster:
#
## `$BIOKEPI_WORK_DIR` is mandatory; 
#
# export BIOKEPI_WORK_DIR=/nfs-work/biokepi/
#
## `INSTALL_TOOLS_PATH` is optional (default is `$BIOKEPI_WORK_DIR/toolkit`):
#
# export INSTALL_TOOLS_PATH=/nfs-constants/biokepi-software/
#
## `PYENSEMBL_CACHE_DIR` is optional (default is `$BIOKEPI_WORK_DIR/pyensembl-cache`):
#
# export PYENSEMBL_CACHE_DIR=/nfs-constants/biokepi-pyensemble-cache/
#
## `REFERENCE_GENOMES_PATH` is optional (default is `$BIOKEPI_WORK_DIR/reference-genome`)
#
# export REFERENCE_GENOMES_PATH=/nfs-constants/biokepi-ref-genomes/
#


